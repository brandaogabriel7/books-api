# Generated by Django 5.1.6 on 2025-03-21 21:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthorModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "authors",
            },
        ),
        migrations.CreateModel(
            name="PublisherModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "publishers",
            },
        ),
        migrations.CreateModel(
            name="BookModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("isbn10", models.CharField(max_length=10)),
                ("isbn13", models.CharField(max_length=13)),
                ("publish_date", models.DateField()),
                ("number_of_pages", models.IntegerField()),
                (
                    "authors",
                    models.ManyToManyField(
                        related_name="books", to="books.authormodel"
                    ),
                ),
                (
                    "publishers",
                    models.ManyToManyField(
                        related_name="books", to="books.publishermodel"
                    ),
                ),
            ],
            options={
                "db_table": "books",
            },
        ),
    ]
